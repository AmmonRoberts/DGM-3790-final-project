{"version":3,"sources":["components/Translations.js","components/MyCountryModal.js","assets/spinner.gif","pages/Home.js","pages/Login.js","pages/Signup.js","pages/NotFound.js","components/nav/NavMenu.js","App.js","index.js","Contexts/CountryContext.js","components/Spinner.js"],"names":["Translations","props","Object","keys","translations","map","key","element","toUpperCase","MyCountryModal","classes","makeStyles","theme","modal","display","alignItems","justifyContent","paper","padding","backgroundColor","border","minWidth","zIndex","useStyles","Modal","aria-labelledby","aria-describedby","className","open","openState","onClose","handleClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","country","name","src","iso2","toLowerCase","alt","language_list","module","exports","Home","identity","useIdentityContext","provisionalUser","user","user_metadata","full_name","style","position","top","left","transform","width","bgcolor","boxShadow","p","Login","history","useHistory","push","Box","sx","initialValues","email","password","validationSchema","Yup","shape","max","required","min","onSubmit","value","a","setErrors","setStatus","setSubmitting","success","login","then","console","log","error","submit","message","errors","values","handleSubmit","handleBlur","handleChange","isSubmitting","touched","noValidate","TextField","Boolean","fullWidth","helperText","label","margin","onBlur","onChange","type","variant","Button","color","disabled","size","Signup","userName","signup","NotFound","NavMenu","useCountryContext","React","isOpen","setIsOpen","toggleDrawer","handleNavChoice","choice","shouldToggle","flexGrow","mb","AppBar","Toolbar","IconButton","edge","aria-label","mr","onClick","Tooltip","title","logout","Avatar","height","slice","Drawer","anchor","role","List","ListItem","button","ListItemIcon","ListItemText","primary","CountryCards","lazy","App","url","CountryContext","fallback","Spinner","path","exact","ReactDOM","render","StrictMode","document","getElementById","createContext","countries","CountryContextProvider","useState","setCountries","isLoading","setLoading","useEffect","axios","get","response","data","fetchCountries","Provider","children","useContext","justifyItems","maxWidth","spinner"],"mappings":"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","file":"static/js/main.b07f6cdd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Translations = (props) => {\n    const translationsArray = Object.keys(props.translations).map((key) => [key, props.translations[key]]);\n\n    return (\n\n        translationsArray.map((element) => {\n            return <span><strong>{element[0].toUpperCase()}</strong> {element[1]}<br /></span>\n        })\n    );\n\n};\n\nexport default Translations;","import Modal from '@mui/material/Modal';\nimport Backdrop from '@mui/material/Backdrop';\nimport Fade from '@mui/material/Fade';\nimport { makeStyles } from '@mui/styles';\nimport React from 'react';\nimport Translations from './Translations';\n\nconst MyCountryModal = (props) => {\n\n    const useStyles = makeStyles((theme) => ({\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        paper: {\n            padding: '1.5em',\n            backgroundColor: \"white\",\n            border: '2px solid #000',\n            minWidth: \"400px\",\n            zIndex: \"0\"\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={props.openState}\n            onClose={props.handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade in={props.openState}>\n                <div className={classes.paper}>\n                    <h2 id=\"transition-modal-title\"> {props.country.name}</h2>\n                    <p><img src={`https://flagcdn.com/h40/${props.country.iso2.toLowerCase()}.png`} alt={`${props.country.name} flag`} /></p>\n                    <h4 className={classes.language_list}>Translations:</h4>\n                    <Translations translations={props.country.translations} />\n                </div>\n            </Fade>\n        </Modal>\n    )\n}\n\nexport default MyCountryModal;","module.exports = __webpack_public_path__ + \"static/media/spinner.17243084.gif\";","import React from 'react';\nimport { Box } from '@mui/system';\nimport { useIdentityContext } from 'react-netlify-identity-gotrue'\nimport { useState } from 'react';\nimport { makeStyles } from '@mui/styles';\n\nconst Home = () => {\n    const identity = useIdentityContext()\n\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '1.5em',\n            backgroundColor: \"white\",\n            border: '2px solid #000',\n            minWidth: \"400px\",\n            zIndex: \"0\"\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            {!identity.provisionalUser && !identity.user && (\n                <h1>Welcome! Please login or sign up to continue.</h1>\n            )}\n\n            {identity.provisionalUser && (\n                <h1>Thanks for signing up! Check your email to confirm.</h1>\n            )}\n\n            {identity.user && (\n                <h1>Welcome back, {identity.user.user_metadata?.full_name}!</h1>\n            )}\n        </div>\n    )\n}\n\nexport default Home","import React from 'react';\nimport { Box, Button, TextField } from '@mui/material'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { useHistory } from 'react-router-dom'\nimport { useIdentityContext } from 'react-netlify-identity-gotrue'\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n}\n\nconst Login = (props) => {\n  const history = useHistory()\n  const identity = useIdentityContext()\n  const handleClose = () => history.push('/')\n  return (\n    <Box sx={style}>\n      <Formik\n        initialValues={{\n          email: 'foo@example.com',\n          password: 'Password123!',\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          password: Yup.string()\n            .min(8, 'Must be at least 8 characters')\n            .max(255)\n            .required('Password is required'),\n        })}\n        onSubmit={async (value, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            setStatus({ success: true })\n            setSubmitting(false)\n            await identity.login({\n              email: value.email,\n              password: value.password\n            }).then(() => {\n              console.log('Successfully submitted!')\n              handleClose()\n            })\n          } catch (err) {\n            console.error(err)\n            setStatus({ success: false })\n            setErrors({ submit: err.message })\n            setSubmitting(false)\n          } finally {\n            handleClose()\n          }\n        }}\n      >\n        {({\n          errors,\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          isSubmitting,\n          touched,\n        }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              variant=\"outlined\"\n              value={values.email}\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              variant=\"outlined\"\n              value={values.password}\n            />\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              Log In\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default Login","import React from 'react';\nimport { Box, Button, TextField } from '@mui/material'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { useHistory } from 'react-router-dom'\nimport { useIdentityContext } from 'react-netlify-identity-gotrue'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n}\n\nconst Signup = (props) => {\n    const history = useHistory()\n    const identity = useIdentityContext()\n    const handleClose = () => history.push('/')\n    return (\n        <Box sx={style}>\n            <Formik\n                initialValues={{\n                    userName: 'Thor Anderson',\n                    email: 'foo@example.com',\n                    password: 'Password123!',\n                }}\n                validationSchema={Yup.object().shape({\n                    userName: Yup.string()\n                        .min(4, 'Must be at least 4 characters')\n                        .max(50, 'Must be less than 50 characters')\n                        .required('User name is required'),\n                    email: Yup.string()\n                        .email('Must be a valid email')\n                        .max(255)\n                        .required('Email is required'),\n                    password: Yup.string()\n                        .min(8, 'Must be at least 8 characters')\n                        .max(255)\n                        .required('Password is required'),\n                })}\n                onSubmit={async (value, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        setStatus({ success: true })\n                        setSubmitting(false)\n                        await identity.signup({\n                            email: value.email, password: value.password, user_metadata: {\n                                full_name: value.userName\n                            }\n                        }).then(() => {\n                            handleClose()\n                            console.log('Successfully submitted!')\n                        })\n                    } catch (err) {\n                        console.error(err)\n                        setStatus({ success: false })\n                        setErrors({ submit: err.message })\n                        setSubmitting(false)\n                    }\n                }}\n            >\n                {({\n                    errors,\n                    values,\n                    handleSubmit,\n                    handleBlur,\n                    handleChange,\n                    isSubmitting,\n                    touched,\n                }) => (\n                    <form noValidate onSubmit={handleSubmit}>\n                        <TextField\n                            error={Boolean(touched.userName && errors.userName)}\n                            fullWidth\n                            helperText={touched.userName && errors.userName}\n                            label=\"User Name\"\n                            margin=\"normal\"\n                            name=\"userName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"text\"\n                            variant=\"outlined\"\n                            value={values.userName}\n                        />\n                        <TextField\n                            error={Boolean(touched.email && errors.email)}\n                            fullWidth\n                            helperText={touched.email && errors.email}\n                            label=\"Email Address\"\n                            margin=\"normal\"\n                            name=\"email\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"email\"\n                            variant=\"outlined\"\n                            value={values.email}\n                        />\n                        <TextField\n                            error={Boolean(touched.password && errors.password)}\n                            fullWidth\n                            helperText={touched.password && errors.password}\n                            label=\"Password\"\n                            margin=\"normal\"\n                            name=\"password\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"password\"\n                            variant=\"outlined\"\n                            value={values.password}\n                        />\n                        <Button\n                            color=\"primary\"\n                            disabled={isSubmitting}\n                            fullWidth\n                            size=\"large\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                        >\n                            Sign Up\n                        </Button>\n                    </form>\n                )}\n            </Formik>\n        </Box>\n    )\n}\n\nexport default Signup","import Box from '@mui/material/Box'\nimport React from 'react';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n}\n\nconst NotFound = () => {\n    return (\n        <Box sx={style}>\n            <h1>Page not found</h1>\n        </Box>\n    )\n}\n\nexport default NotFound","import AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport HomeIcon from '@mui/icons-material/Home'\nimport LoginIcon from '@mui/icons-material/Login'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport PublicIcon from '@mui/icons-material/Public'\nimport {\n    Avatar, Drawer, List, ListItem, ListItemIcon,\n    ListItemText,\n    Tooltip\n} from '@mui/material'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport IconButton from '@mui/material/IconButton'\nimport Toolbar from '@mui/material/Toolbar'\nimport * as React from 'react'\nimport { useIdentityContext } from 'react-netlify-identity-gotrue'\nimport { useHistory } from 'react-router-dom'\nimport { useCountryContext } from '../../Contexts/CountryContext'\n\nconst NavMenu = () => {\n    const CountriesJson = useCountryContext()\n    const history = useHistory()\n    const identity = useIdentityContext()\n    const [isOpen, setIsOpen] = React.useState(false)\n\n    const toggleDrawer = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const handleNavChoice = (choice, shouldToggle) => {\n        history.push(`/${choice}`)\n        if (shouldToggle) toggleDrawer()\n    }\n\n    const drawerItemList = () => (\n        <Box sx={{ width: 250 }} role=\"presentation\">\n            <List>\n                <ListItem button onClick={() => handleNavChoice('countries', true)}>\n                    <ListItemIcon>\n                        <PublicIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Countries\" />\n                </ListItem>\n            </List>\n        </Box>\n    )\n\n    return (\n        <>\n            <Box sx={{ flexGrow: 1, mb: '75px' }}>\n                <AppBar position=\"fixed\"\n                >\n                    <Toolbar>\n                        <IconButton\n                            size=\"large\"\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            sx={{ mr: 2 }}\n                            onClick={toggleDrawer}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"home button\"\n                            color=\"inherit\"\n                            onClick={() => handleNavChoice('welcome', false)}\n                        >\n                            <HomeIcon />\n                        </IconButton>\n\n\n                        {!identity.user && !identity.provisionalUser && (\n                            <Tooltip title=\"Signup\">\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={() => handleNavChoice('signup', false)}\n                                >\n                                    <AccountCircleIcon />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n\n                        {!identity.user && (\n                            <Tooltip title=\"Login\">\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={() => handleNavChoice('login', false)}\n                                >\n                                    <LoginIcon />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n\n                        {identity.user && (\n                            <Tooltip title=\"Logout\">\n                                <IconButton color=\"inherit\" onClick={identity.logout}>\n                                    <Avatar sx={{ width: 24, height: 24 }}>{identity.user?.user_metadata?.full_name.slice(0, 1)}</Avatar>\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                    </Toolbar>\n                </AppBar>\n            </Box>\n            <Drawer anchor=\"left\" open={isOpen} onClose={toggleDrawer}>\n                {drawerItemList()}\n            </Drawer>\n        </>\n    )\n}\n\nexport default NavMenu","import './Styles/App.css';\nimport { Router, Route, Switch } from 'react-router-dom'\nimport { CountryContextProvider } from './Contexts/CountryContext'\nimport React, { Suspense } from 'react'\nimport Home from './pages/Home';\nimport Login from './pages/Login'\nimport Signup from './pages/Signup';\nimport NotFound from './pages/NotFound'\nimport MyCountryModal from './components/MyCountryModal';\nimport NetlifyIdentityContext from 'react-netlify-identity-gotrue'\nimport { Box } from '@mui/material'\nimport Spinner from './components/Spinner';\nimport NavMenu from './components/nav/NavMenu';\n\nconst CountryCards = React.lazy(() => import('./components/CountryCards'))\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n}\n\n\nconst App = () => {\n\n  return (\n    <div id=\"main-div\" className='App'>\n      <NetlifyIdentityContext url='https://ammonroberts-dgm3790project4.netlify.app/'>\n        {/* <NetlifyIdentityContext url='http://localhost:8888/'> */}\n        <CountryContextProvider>\n          <NavMenu />\n          <Suspense\n            fallback={\n              <Box sx={style}>\n                <Spinner />\n              </Box>\n            }\n          >\n            <Switch>\n              <Route path=\"/\" exact>\n                <Home />\n              </Route>\n              <Route path=\"/countries\">\n                <CountryCards />\n              </Route>\n              <Route path=\"/countries/:countryId\" exact>\n                <MyCountryModal />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n            </Switch>\n          </Suspense>\n        </CountryContextProvider>\n      </NetlifyIdentityContext>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import React from 'react';\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport axios from 'axios'\nimport Spinner from '../components/Spinner';\n\nconst CountryContext = createContext({\n  countries: [],\n})\n\nexport const CountryContextProvider = (props) => {\n  const [countries, setCountries] = useState([])\n  const [isLoading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const URL = `/.netlify/functions/countries`\n\n      try {\n        const response = await axios.get(URL)\n        const countries = await response.data\n\n        setCountries(countries)\n        setLoading(false)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    fetchCountries()\n  }, [])\n\n  return isLoading ? (<Spinner />) : (\n    <CountryContext.Provider value={countries} isLoading={isLoading}>\n      {props.children}\n    </CountryContext.Provider>\n  )\n}\n\nexport const useCountryContext = () => useContext(CountryContext)","import React from 'react'\nimport spinner from '../assets/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <div style={{ color: 'white', justifyItems: 'center', alignItems: 'center', display: 'grid', alt: 'Loading' }}>\n            <img style={{ maxWidth: '100px' }} src={spinner} />\n            <h1>Loading...</h1>\n        </div>\n    )\n}\n\nexport default Spinner"],"sourceRoot":""}